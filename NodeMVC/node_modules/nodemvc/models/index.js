/*
	Singleton to load all models on startup
	http://stackoverflow.com/questions/12487416/how-to-organize-a-node-app-that-uses-sequelize/20591015#20591015
	Note: models must be named [mode name].model.js
*/
var fs			= require('fs'),
	path		= require('path'),
	lodash		= require('lodash'),
	sequelize,
	getExtension = function(filename) {
		var ext = path.extname(filename||'').split('.');
		return ext[ext.length - 1];
	},
	injectModels = function(models) {
		fs.readdirSync(__dirname).filter(function(file) {
				return (file.indexOf('.') !== 0) && getExtension(file) == "js" && file.indexOf(".model.js") !== -1;
			}).forEach(function(file) {
				var model = sequelize.import(path.join(__dirname, file));
				models[model.name] = model;
			});
		 
		Object.keys(models).forEach(function(modelName) {
			if (models[modelName].options.hasOwnProperty('associate')) {
				models[modelName].options.associate(models);
			}
		});
		return models;
	};

//	Pass in a sequelize instance for the models, so they are testable
module.exports = function(sequelizeInstance) {
	sequelize = sequelizeInstance;

	return lodash.extend({
		sequelize: sequelizeInstance
	}, injectModels({}));
};