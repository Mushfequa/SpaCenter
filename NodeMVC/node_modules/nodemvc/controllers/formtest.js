var async = require('async'),
	db = require('../models'),
	_ = require('lodash'),
	forms = require('../modules/forms');

/*
 * A bunch of test data for now
 * TODO: Put the below in separate actions and link to them instead
 */
module.exports.index = function(req, res){

async.waterfall([

	//	Create form
    function(callback){

		//	WIP: See user.js - we should not set field types here.

		//	Note: any options that are set on the object 
		//	directly will be pushed inot the attributes.
		//	eg: { value: "something" } will be presented to
		//	the front end as { attr: { value: "something" } }
		var myForm = forms.form({

			fullName: 		{ meta: { required: true } },
			email: 			{ meta: { required: true } },
			addressLine1: 	{ meta: { required: true } },

			//	No attributes
			addressLine2: 	{},

			//	List of radio boxes
			//	Note the values are strings, in order to render properly
			spam: [
				{ value: "true",  id: "spamTrue" },
				{ value: "false", id: "spamFalse" }
			],

			//	Checkbox
			extra: 			{ value: "true", id: "extraOption" },

			//	Moolah
			money: 			{ value: -56.78, meta: { required: true  }},
			
			//	Test render custom textbox and radio box list
			customValue: 	{ meta: { required: true } },

			//	Custom list of check boxes
			customEnum: 	{
				options: [
					{ value: "0", id: "small" },
					{ value: "1", id: "medium" },
					{ value: "2", id: "large" }
				]
			},
			
			//	Note: this should be auto generated from data
			//+selectBox(selectBox, selectOptions)
			typeSelect: 	{
				options: [
					{ value: "" },
					{ text: "One", value: 1, selected:"selected" },
					{ text: "2", value: "two" },
					{ text: "Three" }
				], 
				meta: {
					required: true
				}
			}
		}, req.i18n.t);

    	callback(null, myForm);
    },
    //	Render page
    function(form, users, callback){
		res.render('formtest', {
			title: 'NodeMVC test page',

			//	You can add static data directly to the model
			money: {
				currency: '$',
				value: -12.34
			},

			//	Set dynamic data on model
			users: users,

			//	Add the form to the view
			form: form
		});

    }
], function (err, result) {
	//	TODO: Should render error page here
	res.render('error', {
		title: 'NodeMVC Error page'
	});
});

};